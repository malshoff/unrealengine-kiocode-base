#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WinWithoutHealing_Challenge

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_WinWithoutHealing_Challenge.BP_WinWithoutHealing_Challenge_C.ExecuteUbergraph_BP_WinWithoutHealing_Challenge
// 0x0080 (0x0080 - 0x0000)
struct BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARChallengeManager*                     CallFunc_GetChallengeManager_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARPlayerPawn*                           K2Node_DynamicCast_AsRPlayer_Pawn;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URGScriptComponent*                     CallFunc_GetRGScriptComponent_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URGAbilityCharacterMutatorScript*       CallFunc_GetActivatableAbilityByName_ReturnValue;  // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_AbilityIndex;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMutableIntegerCurrentValue_ReturnValue; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 AbilityIndex)>           K2Node_CreateDelegate_OutputDelegate;              // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ARGameState*                            CallFunc_GetRGameState_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0070(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge) == 0x000008, "Wrong alignment on BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge");
static_assert(sizeof(BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge) == 0x000080, "Wrong size on BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge");
static_assert(offsetof(BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge, EntryPoint) == 0x000000, "Member 'BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge, CallFunc_GetChallengeManager_ReturnValue) == 0x000008, "Member 'BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge::CallFunc_GetChallengeManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge, K2Node_DynamicCast_AsRPlayer_Pawn) == 0x000018, "Member 'BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge::K2Node_DynamicCast_AsRPlayer_Pawn' has a wrong offset!");
static_assert(offsetof(BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge, CallFunc_GetRGScriptComponent_ReturnValue) == 0x000028, "Member 'BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge::CallFunc_GetRGScriptComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge, CallFunc_GetActivatableAbilityByName_ReturnValue) == 0x000030, "Member 'BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge::CallFunc_GetActivatableAbilityByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge, K2Node_CustomEvent_AbilityIndex) == 0x000038, "Member 'BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge::K2Node_CustomEvent_AbilityIndex' has a wrong offset!");
static_assert(offsetof(BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge, CallFunc_GetMutableIntegerCurrentValue_ReturnValue) == 0x000040, "Member 'BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge::CallFunc_GetMutableIntegerCurrentValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge, K2Node_CreateDelegate_OutputDelegate) == 0x000044, "Member 'BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000054, "Member 'BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge, CallFunc_Not_PreBool_ReturnValue_1) == 0x000055, "Member 'BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge, CallFunc_GetRGameState_ReturnValue) == 0x000058, "Member 'BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge::CallFunc_GetRGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge, K2Node_CreateDelegate_OutputDelegate_1) == 0x000060, "Member 'BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge, K2Node_CreateDelegate_OutputDelegate_2) == 0x000070, "Member 'BP_WinWithoutHealing_Challenge_C_ExecuteUbergraph_BP_WinWithoutHealing_Challenge::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function BP_WinWithoutHealing_Challenge.BP_WinWithoutHealing_Challenge_C.OnAbilityUsed_Event
// 0x0004 (0x0004 - 0x0000)
struct BP_WinWithoutHealing_Challenge_C_OnAbilityUsed_Event final
{
public:
	int32                                         AbilityIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WinWithoutHealing_Challenge_C_OnAbilityUsed_Event) == 0x000004, "Wrong alignment on BP_WinWithoutHealing_Challenge_C_OnAbilityUsed_Event");
static_assert(sizeof(BP_WinWithoutHealing_Challenge_C_OnAbilityUsed_Event) == 0x000004, "Wrong size on BP_WinWithoutHealing_Challenge_C_OnAbilityUsed_Event");
static_assert(offsetof(BP_WinWithoutHealing_Challenge_C_OnAbilityUsed_Event, AbilityIndex) == 0x000000, "Member 'BP_WinWithoutHealing_Challenge_C_OnAbilityUsed_Event::AbilityIndex' has a wrong offset!");

}

